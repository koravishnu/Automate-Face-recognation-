import face_recognition
import cv2
import numpy as np
import csv
import os
from datetime import datetime

# Initialize video capture
video_capture = cv2.VideoCapture(0)

# Load known face images and encode them
vishnu_image = face_recognition.load_image_file(r"C:\Users\Adarapu Saketh\OneDrive\Documents\Desktop\vishnu.jpg")
vishnu_encoding = face_recognition.face_encodings(vishnu_image)[0]

bunty_image = face_recognition.load_image_file(r"C:\Users\Adarapu Saketh\OneDrive\Documents\Desktop\bunty.jpg")
bunty_encoding = face_recognition.face_encodings(bunty_image)[0]

kannaya_image = face_recognition.load_image_file(r"C:\Users\Adarapu Saketh\OneDrive\Documents\Desktop\kannaya.jpg")
kannaya_encoding = face_recognition.face_encodings(kannaya_image)[0]

nikhil_image = face_recognition.load_image_file(r"C:\Users\Adarapu Saketh\OneDrive\Documents\Desktop\nikhil.jpg")
nikhil_encoding = face_recognition.face_encodings(nikhil_image)[0]

bangaram_image = face_recognition.load_image_file(r"C:\Users\Adarapu Saketh\OneDrive\Documents\Desktop\bangaram.jpg")
bangaram_encoding = face_recognition.face_encodings(bangaram_image)[0]

# Known face encodings and names
known_face_encoding = [
    vishnu_encoding,
    bunty_encoding,
    kannaya_encoding,
    nikhil_encoding,
    bangaram_encoding
]

known_faces_names = [
    "Vishnu",
    "bunty",
    "Kannaya",
    "Nikhil",
    "Bangaram"
]

students = known_faces_names.copy()

face_locations = []
face_encodings = []
face_names = []
s = True

# Get current date for logging
now = datetime.now()
current_date = now.strftime("%Y-%m-%d")

# Open CSV file for logging attendance
f = open(current_date + '.csv', 'w+', newline='')
lnwriter = csv.writer(f)

while True:
    # Capture video frame
    _, frame = video_capture.read()
    
    # Resize frame for faster processing
    small_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25)
    rgb_small_frame = small_frame[:, :, ::-1]
    
    if s:
        # Detect faces and encode them
        face_locations = face_recognition.face_locations(rgb_small_frame)
        face_encodings = face_recognition.face_encodings(rgb_small_frame, face_locations)
        face_names = []
        
        for face_encoding in face_encodings:
            matches = face_recognition.compare_faces(known_face_encoding, face_encoding)
            name = ""
            face_distance = face_recognition.face_distance(known_face_encoding, face_encoding)
            best_match_index = np.argmin(face_distance
            if matches[best_match_index]:
                name = known_faces_names[best_match_index]
            
            face_names.append(name)
            
            if name in known_faces_names:
                # Draw rectangle and display name
                font = cv2.FONT_HERSHEY_SIMPLEX
                bottomLeftCornerOfText = (10, 100)
                fontScale = 1.5
                fontColor = (255, 0, 0)
                thickness = 3
                lineType = 2
                
                cv2.putText(frame, name + ' Present',
                            bottomLeftCornerOfText,
                            font,
                            fontScale,
                            fontColor,
                            thickness,
                            lineType)
                
                if name in students:
                    students.remove(name)
                    print(students)
                    current_time = now.strftime("%H-%M-%S")
                    lnwriter.writerow([name, current_time])
    # Display the resulting frame
    cv2.imshow("Attendance System", frame)
    
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
# Release resources and close files
video_capture.release()
cv2.destroyAllWindows()
f.close()
